clear all
clc


canal = [0.00249376558603500 0.00276243093922652 0.00307692307692308 0.00344827586206897 0.00389105058365759 0.00442477876106195 0.00507614213197970 0.00588235294117647 0.00689655172413793 0.00819672131147541 0.00990099009900990 0.0121951219512195 0.0153846153846154 0.0200000000000000 0.0270270270270270 0.0384615384615385 0.0588235294117647 0.100000000000000 0.200000000000000 0.500000000000000 1 0.500000000000000 0.200000000000000 0.100000000000000 0.0588235294117647 0.0384615384615385 0.0270270270270270 0.0200000000000000 0.0153846153846154 0.0121951219512195 0.00990099009900990 0.00819672131147541 0.00689655172413793 0.00588235294117647 0.00507614213197970 0.00442477876106195 0.00389105058365759 0.00344827586206897 0.00307692307692308 0.00276243093922652 0.00249376558603491];
taps = 11;

K = (taps-1)/2;     %ya que se quieren generar 2*K + 1 taps desde -K hasta K
recorrido = -K:K;
T = 1;
M = 2;
tau = T/M;
Xm = zeros(taps,taps);
q = zeros(1,taps);
tapCentral = round(length(q)/2);
q(tapCentral) = 1; %condicion para cero ISI
tapCentral = round(length(canal)/2);




%generacion de la matriz Xm

for i = 0:(taps-1)
    for j = 0:(taps-1)
        
        parametro = tapCentral + K + j -2*i;
        
        if parametro > 0 && parametro <= length(canal)
            Xm(i+1,j+1) = canal(parametro);
        else
            Xm(i+1,j+1) = 0;
        
        
    end
    
end
end
cOptimos = inv(Xm)*transpose(q);